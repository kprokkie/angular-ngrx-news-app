{"ast":null,"code":"import _classCallCheck from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport var AsapAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(AsapAction, _AsyncAction);\n\n  var _super = _createSuper(AsapAction);\n\n  function AsapAction(scheduler, work) {\n    var _this;\n\n    _classCallCheck(this, AsapAction);\n\n    _this = _super.call(this, scheduler, work);\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  _createClass(AsapAction, [{\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (delay !== null && delay > 0) {\n        return _get(_getPrototypeOf(AsapAction.prototype), \"requestAsyncId\", this).call(this, scheduler, id, delay);\n      }\n\n      scheduler.actions.push(this);\n      return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (delay != null && delay > 0 || delay == null && this.delay > 0) {\n        return _get(_getPrototypeOf(AsapAction.prototype), \"recycleAsyncId\", this).call(this, scheduler, id, delay);\n      }\n\n      if (scheduler.actions.length === 0) {\n        immediateProvider.clearImmediate(id);\n        scheduler._scheduled = undefined;\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return AsapAction;\n}(AsyncAction); //# sourceMappingURL=AsapAction.js.map","map":null,"metadata":{},"sourceType":"module"}