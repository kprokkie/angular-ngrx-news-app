{"ast":null,"code":"import _classCallCheck from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Scheduler } from '../Scheduler';\nexport var AsyncScheduler = /*#__PURE__*/function (_Scheduler) {\n  _inherits(AsyncScheduler, _Scheduler);\n\n  var _super = _createSuper(AsyncScheduler);\n\n  function AsyncScheduler(SchedulerAction) {\n    var _this;\n\n    var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Scheduler.now;\n\n    _classCallCheck(this, AsyncScheduler);\n\n    _this = _super.call(this, SchedulerAction, now);\n    _this.actions = [];\n    _this._active = false;\n    _this._scheduled = undefined;\n    return _this;\n  }\n\n  _createClass(AsyncScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      var actions = this.actions;\n\n      if (this._active) {\n        actions.push(action);\n        return;\n      }\n\n      var error;\n      this._active = true;\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while (action = actions.shift());\n\n      this._active = false;\n\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AsyncScheduler;\n}(Scheduler); //# sourceMappingURL=AsyncScheduler.js.map","map":null,"metadata":{},"sourceType":"module"}