{"ast":null,"code":"import _classCallCheck from \"C:/Users/David/source/repos/angular-ngrx-news-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, map, catchError } from '../../../../node_modules/rxjs/operators';\nimport { NewsService } from '../../services/news.service';\nimport * as fromActions from '../actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../services/news.service\";\nexport var NewsEffects = function NewsEffects(actions$, newsService) {\n  var _this = this;\n\n  _classCallCheck(this, NewsEffects);\n\n  this.actions$ = actions$;\n  this.newsService = newsService;\n  this.loadNews$ = this.actions$.pipe(ofType(fromActions.NewsActionTypes.LOAD_SECTION_NEWS), // watch action\n  mergeMap(function (action) {\n    return (// service call to get the section news\n      _this.newsService.getSectionNews(action.payload).pipe(map(function (news) {\n        return new fromActions.LoadNewsSectionSuccess(news.results);\n      }), catchError(function (error) {\n        return of(new fromActions.LoadNewsSectionFailure(error));\n      }))\n    );\n  }));\n};\n\nNewsEffects.ɵfac = function NewsEffects_Factory(t) {\n  return new (t || NewsEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.NewsService));\n};\n\nNewsEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NewsEffects,\n  factory: NewsEffects.ɵfac\n});\n\n__decorate([Effect(), __metadata(\"design:type\", Observable)], NewsEffects.prototype, \"loadNews$\", void 0);","map":null,"metadata":{},"sourceType":"module"}